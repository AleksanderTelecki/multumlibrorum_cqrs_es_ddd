// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Promotion.Domain;

#nullable disable

namespace Promotion.Domain.Migrations
{
    [DbContext(typeof(PromotionDomainDataContext))]
    partial class PromotionDomainDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Promotion.Domain.Repository.Entity.PromotionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PromotionInPercentage")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<DateTime>("Regdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promotions", "Promotion");
                });

            modelBuilder.Entity("Promotion.Domain.Repository.Entity.PromotionProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PromotionEntityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PromotionId");

                    b.HasKey("Id");

                    b.HasIndex("PromotionEntityId");

                    b.ToTable("PromotionProduct", "Promotion");
                });

            modelBuilder.Entity("Promotion.Domain.Repository.Entity.PromotionProductEntity", b =>
                {
                    b.HasOne("Promotion.Domain.Repository.Entity.PromotionEntity", "Promotion")
                        .WithMany("Products")
                        .HasForeignKey("PromotionEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Promotion.Domain.Repository.Entity.PromotionEntity", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
